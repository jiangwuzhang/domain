#!/usr/bin/php
<?php
define('AVAILABLE', 3);
$argv = $_SERVER['argv'];
$conn = mysql_connect('127.0.0.1', 'root', '123123');
mysql_select_db('nogrp_domain');
mysql_query('SET NAMES utf8');

(!empty($argv[1]) && function_exists($argv[1])) ? call_user_func($argv[1]) : main();

function main(){
	
}

function start_number5(){
	update("SELECT * FROM domain_list WHERE http_code=0 AND type='number5' 
			ORDER BY id DESC LIMIT 1");
}

function start_shuangpin(){
	update("SELECT * FROM domain_list WHERE http_code=0 AND type='shuangpin'
			ORDER BY id DESC LIMIT 1");
}

function update($get_sql){
	global $conn;
	$vector = 1;
	do {
		$data = get($get_sql);
		if ($data !== NULL){
			$whois = whois_query($data['domain']);
			if (is_numeric($whois)){
				echo "{$data['domain']} http_code {$whois}\n";
			} else {
				$resp = json_encode($whois);
				$resp = mysql_real_escape_string($resp);
				$last_modified = date("Y-m-d H:i:s");
				if ($whois['code'] == AVAILABLE){
					$sql_str = "UPDATE domain_list SET http_code=200,last_modified='{$last_modified}',";
	                $sql_str .= "available=1,resp='{$resp}' WHERE id={$data['id']}";
	                echo json_encode($whois)." # {$data['domain']}\n";
	                mysql_query($sql_str);
				} else {
					$sql_str = "UPDATE domain_list SET http_code=200,last_modified='{$last_modified}',";
                    $sql_str .= "available=77,resp='{$resp}' WHERE id={$data['id']}";
                    unset($whois['whois_data']);
                    echo json_encode($whois)." # {$data['domain']}\n";
                    mysql_query($sql_str);
				}
			}
		} else {
			$vector = 0;
		}
	} while ($vector !== 0);
}

function whois_query($domain){
	$api = sprintf("http://avatar.46944.com/whois.php?domain=%s", $domain);
	$data = curl_get($api);
	$http_code = $data['info']['http_code'];
	if ($http_code === 200){
		return json_decode($data['content'], true);
	}
	return $http_code;
}

function get($sql_str){
	global $conn;
	$query = mysql_query($sql_str);
	if ($res = mysql_fetch_assoc($query)){
		return $res;
	}
	return NULL;
}

function dic2table(){
	global $argv, $conn;
	$dic = dirname(__FILE__)."/dic/".$argv[2];
	if (!file_exists($dic)){
		exit("no file input\n");
	}
	$words = file_get_contents($dic);
	$words = explode("\n", $words);
	foreach ($words as $key => $value) {
		$value = trim($value);
		if ($value !== ''){
			$arr_py = utf8_to_pinyin($value);
			$str_py = implode('', $arr_py);
			$chinese_total = mb_strlen($value, 'utf-8');
			if ($chinese_total > 3){
				$str_py = '';
				foreach ($arr_py as $_py) {
					$str_py .= $_py[0];
				}
			}

			$domain_total = strlen($str_py);
			$sql_str = "INSERT IGNORE INTO domain_list(`chinese`,`chinese_total`,`domain`,`domain_total`) VALUES";
			$sql_str .= "('{$value}',{$chinese_total},'{$str_py}.com',{$domain_total})";
			mysql_query($sql_str);
			echo $sql_str."\n";
		}
	}
}

function rand5(){
	global $conn;
	for ($i = 0; $i < 100000; ++$i){
		$domain = sprintf("%'.05d.com", $i);
		$sql_str = "INSERT IGNORE INTO domain_list(`chinese`,`chinese_total`,`domain`,`domain_total`)";
		$sql_str .= " VALUES('5位数字域名({$domain})',85,'{$domain}',5)";
		mysql_query($sql_str);
		echo $sql_str."\n";
	}
}

function utf8_to_pinyin($txt) {
        $txt = iconv('utf-8', 'gbk//IGNORE', $txt);
        $l = strlen($txt);
        $i = 0;
        $pyarr = array();
        $py = array();
        $filename = 'gb-pinyin.table';
        $fp = fopen($filename, 'r');
        while(!feof($fp)) {
                $p = explode("-",fgets($fp,32));
                $pyarr[intval($p[1])] = trim($p[0]);
        }
        fclose($fp);
        ksort($pyarr);
        while($i < $l) {
                $tmp = ord($txt[$i]);
                if($tmp>=128) {
                        $asc = abs($tmp*256+ord($txt[$i+1])-65536);
                        $i = $i+1;
                } else $asc = $tmp;
                $py[] = asc_to_pinyin($asc, $pyarr);
                $i++;
        }
        return $py;
}

function asc_to_pinyin($asc,&$pyarr) {
	if($asc < 128)return chr($asc);
		elseif(isset($pyarr[$asc]))return $pyarr[$asc];
	else {
		foreach($pyarr as $id => $p) {
		    if($id >= $asc)return $p;
		}
	}
}

function curl_get($url, $options = array()){
	$ch = curl_init();
	$data = array();
	curl_setopt($ch, CURLOPT_URL, $url);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	foreach ($options as $key => $value) {
		curl_setopt($ch, $key, value);
	}
	$data['content'] = curl_exec($ch);
	$data['info'] = curl_getinfo($ch);
	curl_close($ch);
	return $data;
}